<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Project Dovetail™ – Documentation</title>
    <link>https://tibcosoftware.github.io/dovetail/docs/</link>
    <description>Recent content in Documentation on Project Dovetail™</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://tibcosoftware.github.io/dovetail/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: CorDapp for charlie</title>
      <link>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/corda-dist/charlie/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/corda-dist/charlie/</guid>
      <description>
        
        
        &lt;p&gt;&lt;video width=&#34;480&#34; height=&#34;320&#34; controls=&#34;controls&#34;&gt;
    &lt;source src=&#34;https://tibcosoftware.github.io/dovetail/dovetail/videos/charlie.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-issueiou-initiator-flow&#34;&gt;1. IssueIOU initiator flow&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create a flow
&lt;ul&gt;
&lt;li&gt;flow name: IssueIOUInitiator&lt;/li&gt;
&lt;li&gt;add a trigger : select &amp;ldquo;Dovetail CorDApp Flow Initiator&amp;rdquo; from the list
&lt;ul&gt;
&lt;li&gt;select false for &amp;ldquo;Use confidential identities for this transaction?&amp;rdquo;&lt;/li&gt;
&lt;li&gt;select false for &amp;ldquo;Send transactions to observers?&amp;rdquo;&lt;/li&gt;
&lt;li&gt;click &amp;ldquo;Next&amp;rdquo; button&lt;/li&gt;
&lt;li&gt;add following flow input parameters
&lt;ul&gt;
&lt;li&gt;holder :    Type = Party, PartyRole = Participant&lt;/li&gt;
&lt;li&gt;amt:        Type = Amount&lt;Currency&gt;&lt;/li&gt;
&lt;li&gt;extId:      Type = String&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;click &amp;ldquo;Continue&amp;rdquo; button&lt;/li&gt;
&lt;li&gt;select &amp;ldquo;Copy Schema&amp;rdquo;&lt;/li&gt;
&lt;li&gt;select the trigger, and map flow input&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;implement IssueIOUInitiator flow
&lt;ul&gt;
&lt;li&gt;select BuildTransactoinProposal activity from Dovetail-CorDApp category&lt;/li&gt;
&lt;li&gt;select &amp;ldquo;IOUContract:&amp;rdquo; from contract dropdown&lt;/li&gt;
&lt;li&gt;select com.example.iou.IssueIOU from transaction dropdown&lt;/li&gt;
&lt;li&gt;map the activity input
&lt;ul&gt;
&lt;li&gt;use cordapp.createLinearIdFromExternalId($flow.transactionInput.extId) to map iou.linearId&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;You will see an error at design time for this function, ignore the error for now, it is supported at runtime&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-transferiou-receiver-flow&#34;&gt;2. TransferIOU receiver flow&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create a flow
&lt;ul&gt;
&lt;li&gt;flow name: TransferIOUResponder&lt;/li&gt;
&lt;li&gt;select trigger : Dovetail CorDApp Flow Receiver
&lt;ul&gt;
&lt;li&gt;select receiver from flow type dropdown&lt;/li&gt;
&lt;li&gt;select false for &amp;ldquo;Use confidential identities for this transaction?&amp;rdquo;&lt;/li&gt;
&lt;li&gt;initiator flow name: com.alice.iou.flows.TransferIOUInitiator&lt;/li&gt;
&lt;li&gt;click &amp;ldquo;Continue&amp;rdquo; button&lt;/li&gt;
&lt;li&gt;select &amp;ldquo;Copy Schema&amp;rdquo;&lt;/li&gt;
&lt;li&gt;select the trigger, and map flow input&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-settleiou-initiator-flow&#34;&gt;3. SettleIOU initiator flow&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create a flow
&lt;ul&gt;
&lt;li&gt;flow name: SettleIOUInitiator&lt;/li&gt;
&lt;li&gt;select trigger : Dovetail CorDApp Flow Initiator
&lt;ul&gt;
&lt;li&gt;select false for &amp;ldquo;Use confidential identities for this transaction?&amp;rdquo;&lt;/li&gt;
&lt;li&gt;select false for &amp;ldquo;Send transactions to observers?&amp;rdquo;&lt;/li&gt;
&lt;li&gt;click &amp;ldquo;Next&amp;rdquo; button&lt;/li&gt;
&lt;li&gt;add following flow input parameters
&lt;ul&gt;
&lt;li&gt;iouId : Type = LinearId&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;click &amp;ldquo;Continue&amp;rdquo; button&lt;/li&gt;
&lt;li&gt;select &amp;ldquo;Copy Schema&amp;rdquo;&lt;/li&gt;
&lt;li&gt;select the trigger, and map flow input&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Implement SettleIOUInitiator flow
&lt;ul&gt;
&lt;li&gt;add SimpleVaultQuery activity from Dovetail-CorDApp category
&lt;ul&gt;
&lt;li&gt;Configuration screen
&lt;ul&gt;
&lt;li&gt;select IOU from asset dropdow&lt;/li&gt;
&lt;li&gt;Map input&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;if IOU is found
* add CashWallet activity from Dovetail-CorDApp category
* Select &amp;ldquo;Retrieve Funds&amp;rdquo; from dropdown
* Map input
* add BuildTransactoinProposal Dovetail-CorDApp category
* select IOU from contract dropdown
* select com.example.iou.SettleIOU from transaction dropdown
* map the activity input&lt;/li&gt;
&lt;li&gt;otherwise throw error&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-export-the-charlie-applicatio&#34;&gt;4. Export the &amp;ldquo;charlie&amp;rdquo; applicatio&lt;/h3&gt;
&lt;p&gt;export the application to artifiacts/charlie.json&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Installation</title>
      <link>https://tibcosoftware.github.io/dovetail/docs/getting-started/installation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/dovetail/docs/getting-started/installation/</guid>
      <description>
        
        
        &lt;h2 id=&#34;installing-the-project-dovetail-studio&#34;&gt;Installing the Project Dovetail Studio&lt;/h2&gt;
&lt;p&gt;just follow these steps:&lt;/p&gt;
&lt;p&gt;1.- Download the latest version for your os architecture and your blockchain target.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can find the latest release &lt;a href=&#34;https://github.com/TIBCOSoftware/dovetail/releases/latest&#34;&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Or you can just execute this commands&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For Hyperledger fabric development:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;mkdir dovetail_installation
cd dovetail_installation
curl -OL https://github.com/TIBCOSoftware/dovetail/releases/download/v0.2.0/TIB_dovetail-fabric_0.2.0_macosx_x86_64.zip
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;For R3 Corda development:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;mkdir dovetail_installation
cd dovetail_installation
curl -OL https://github.com/TIBCOSoftware/dovetail/releases/download/v0.2.0/TIB_dovetail-corda_0.2.0_macosx_x86_64.zip
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;For Multitarget development:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;mkdir dovetail_installation
cd dovetail_installation
curl -OL https://github.com/TIBCOSoftware/dovetail/releases/download/v0.2.0/TIB_dovetail-multitarget_0.2.0_macosx_x86_64.zip
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2.- Unzip the downloaded release (for example on mac) (from dovetail_installation folder).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;unzip TIB_dovetail-fabric_0.2.0_macosx_x86_64.zip
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;starting-dovetail-studio&#34;&gt;Starting Dovetail Studio&lt;/h2&gt;
&lt;p&gt;To get started with your downloaded version of the Dovetail Studio in the previous step just do the following:&lt;/p&gt;
&lt;p&gt;1.- Run studio&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;dovetail/0.2/bin/run-studio.sh eula-accept
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;launching-dovetail-studio&#34;&gt;Launching Dovetail Studio&lt;/h2&gt;
&lt;p&gt;To launch Dovetail Studio simply open your favorite web browser, and navigate to http://localhost:8090. You&#39;ll see the initial page to create your first smart contract!&lt;/p&gt;
&lt;h2 id=&#34;installation-tutorial-video&#34;&gt;Installation Tutorial Video&lt;/h2&gt;
&lt;video width=&#34;480&#34; height=&#34;320&#34; controls=&#34;controls&#34;&gt;
    &lt;source src=&#34;https://tibcosoftware.github.io/dovetail/dovetail/videos/dovetail_studio_install.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: IOU Smart Contract Data Model</title>
      <link>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/smart-contract/model/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/smart-contract/model/</guid>
      <description>
        
        
        &lt;p&gt;&lt;video width=&#34;480&#34; height=&#34;320&#34; controls=&#34;controls&#34;&gt;
    &lt;source src=&#34;https://tibcosoftware.github.io/dovetail/dovetail/videos/iou_asset_schema.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start up and open Dovetail Studio WebUI&lt;/li&gt;
&lt;li&gt;Go to Connection tab&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;Add Connection&amp;rdquo;
&lt;ul&gt;
&lt;li&gt;Choose &amp;ldquo;Define Ledger Asset Schema&amp;rdquo; from the list&lt;/li&gt;
&lt;li&gt;Enter display name, e.g. &amp;ldquo;my first IOU&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Enter asset name &amp;ldquo;IOU&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Enter module name &amp;ldquo;com.example.iou&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Select asset type &amp;ldquo;Linear State&amp;rdquo;
&lt;ul&gt;
&lt;li&gt;LinearId attribute will be automatically added to the pre-defined fields&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Enter addition fields
&lt;ul&gt;
&lt;li&gt;issuer, select &amp;ldquo;Party&amp;rdquo; from the type dropdown menu&lt;/li&gt;
&lt;li&gt;holder, select &amp;ldquo;Party&amp;rdquo; from the type dropdown menu&lt;/li&gt;
&lt;li&gt;amt, select &amp;ldquo;Amount&lt;Courrency&gt;&amp;rdquo; from the type dropdown menu&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Define party roles
&lt;ul&gt;
&lt;li&gt;add &amp;ldquo;issuer&amp;rdquo;, leave other fields as default&lt;/li&gt;
&lt;li&gt;add &amp;ldquo;holder&amp;rdquo;, leave other fields as default&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;Donee&amp;rdquo; button&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Start up nodes</title>
      <link>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/corda-test/start-nodes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/corda-test/start-nodes/</guid>
      <description>
        
        
        &lt;h3 id=&#34;1-run-code-nodes&#34;&gt;1 Run code nodes&lt;/h3&gt;
&lt;p&gt;from your cli folder, run following commands, check logs under network/corda/nodes/*/log to verify that each node has been started&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;./network_clean.sh to clean up logs and vault database&lt;/li&gt;
&lt;li&gt;./network_start.sh to start up nodes&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;to stop all nodes, run following command&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;./network_stop.sh to shutdown all nodes&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2-start-up-web-clients&#34;&gt;2 Start up web clients&lt;/h3&gt;
&lt;p&gt;from your cli folder, run following command to start up all web servers, check cli/log to verify web servers are started.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;./start_webservers.sh&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;from your cli folder, run following command to stop all web servers&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;./stop_webservers.sh&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;3-open-swagger-ui&#34;&gt;3 Open swagger UI&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;alice: http://localhost:9000/swagger-ui.html&lt;/li&gt;
&lt;li&gt;charlie : http://localhost:9001/swagger-ui.html&lt;/li&gt;
&lt;li&gt;bob: http://localhost:9002/swagger-ui.html&lt;/li&gt;
&lt;li&gt;bank: http://localhost:9004/swagger-ui.html&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Dovetail CLI</title>
      <link>https://tibcosoftware.github.io/dovetail/docs/getting-started/dovetail-cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/dovetail/docs/getting-started/dovetail-cli/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;The dovetail cli is a tool to mainly generate smart contracts for a given model built using ui tool &lt;a href=&#34;ch01-01-installation.md&#34;&gt;Dovetail Studio&lt;/a&gt;, so we recommend you to learn how to do that first.&lt;/p&gt;
&lt;h2 id=&#34;before-you-get-started&#34;&gt;Before you get started&lt;/h2&gt;
&lt;p&gt;Before you can get started with the cli tools you need to make sure you have the &lt;a href=&#34;https://golang.org/doc/install&#34;&gt;Go programming language&lt;/a&gt; and &lt;a href=&#34;https://git-scm.com/book/en/v2/Getting-Started-Installing-Git&#34;&gt;git&lt;/a&gt; installed. Go v1.13.x is required.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Don&#39;t forget to set your &lt;code&gt;GOPATH&lt;/code&gt; variable and make sure that &lt;code&gt;$GOPATH/bin&lt;/code&gt; is part of your &lt;code&gt;PATH&lt;/code&gt;
(see &lt;a href=&#34;https://golang.org/doc/code.html#GOPATH&#34;&gt;here&lt;/a&gt; or &lt;a href=&#34;https://github.com/golang/go/wiki/SettingGOPATH&#34;&gt;here&lt;/a&gt; for more details)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;installing-the-cli-tools&#34;&gt;Installing the cli tools&lt;/h2&gt;
&lt;p&gt;Copy and paste the following commands to install Project Dovetail™ commandline tool.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl https://github.com/TIBCOSoftware/dovetail-cli/releases/download/v0.2.0/dovetail-cli-install.sh -sSfL v0.2.0 | sh
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;The binary dovetail will be in your dovetail-cli/bin directory.
You can add /path/to/dovetail-cli/bin/dovetail to your PATH env variable for easier access.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;installation-tutorial-video&#34;&gt;Installation Tutorial Video&lt;/h2&gt;
&lt;video width=&#34;480&#34; height=&#34;320&#34; controls=&#34;controls&#34;&gt;
    &lt;source src=&#34;https://github.com/TIBCOSoftware/dovetail/blob/master/src/videos/dovetail_cli_install.mp4?raw=true&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: CorDapp for alice</title>
      <link>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/corda-dist/alice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/corda-dist/alice/</guid>
      <description>
        
        
        &lt;p&gt;&lt;video width=&#34;480&#34; height=&#34;320&#34; controls=&#34;controls&#34;&gt;
    &lt;source src=&#34;https://tibcosoftware.github.io/dovetail/dovetail/videos/alice.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-issueiou-receiver-flow&#34;&gt;1. IssueIOU receiver flow&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create a flow
&lt;ul&gt;
&lt;li&gt;Create a flow&lt;/li&gt;
&lt;li&gt;flow name: IssueIOUResponder&lt;/li&gt;
&lt;li&gt;select trigger : Dovetail CorDApp Flow Receiver
&lt;ul&gt;
&lt;li&gt;select receiver from flow type dropdown&lt;/li&gt;
&lt;li&gt;select false for &amp;ldquo;Use confidential identities for this transaction?&amp;rdquo;&lt;/li&gt;
&lt;li&gt;initiator flow name: com.charlie.iou.flows.IssueIOUInitiator&lt;/li&gt;
&lt;li&gt;click &amp;ldquo;Continue&amp;rdquo; button&lt;/li&gt;
&lt;li&gt;select &amp;ldquo;Copy Schema&amp;rdquo;&lt;/li&gt;
&lt;li&gt;select the trigger, and map flow input&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-transferiou-initiator-flow&#34;&gt;2. TransferIOU initiator flow&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;flow name: TransferIOUInitiator
&lt;ul&gt;
&lt;li&gt;add a trigger : select &amp;ldquo;Dovetail CorDApp Flow Initiator&amp;rdquo; from the list
&lt;ul&gt;
&lt;li&gt;select false for &amp;ldquo;Use confidential identities for this transaction?&amp;rdquo;&lt;/li&gt;
&lt;li&gt;select false for &amp;ldquo;Send transactions to observers?&amp;rdquo;&lt;/li&gt;
&lt;li&gt;click &amp;ldquo;Next&amp;rdquo; button&lt;/li&gt;
&lt;li&gt;add following flow input parameters
&lt;ul&gt;
&lt;li&gt;iouId :    Type = LinearId&lt;/li&gt;
&lt;li&gt;newHolder: Type = Party, PartyRole = Participant&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;click &amp;ldquo;Continue&amp;rdquo; button&lt;/li&gt;
&lt;li&gt;select &amp;ldquo;Copy Schema&amp;rdquo;&lt;/li&gt;
&lt;li&gt;select the trigger, and map flow input&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;implement TransferIOUInitiator flow
&lt;ul&gt;
&lt;li&gt;add SimpleVaultQuery activity from Dovetail-CorDApp category
&lt;ul&gt;
&lt;li&gt;Configuration screen
&lt;ul&gt;
&lt;li&gt;select IOU from asset dropdow&lt;/li&gt;
&lt;li&gt;Map input&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;if IOU is found
&lt;ul&gt;
&lt;li&gt;add BuildTransactoinProposal activity from Dovetail-CorDApp category
&lt;ul&gt;
&lt;li&gt;select &amp;ldquo;IOUContract:&amp;rdquo; from contract dropdown&lt;/li&gt;
&lt;li&gt;select com.example.iou.TransferIOU from transaction dropdown&lt;/li&gt;
&lt;li&gt;map the activity input&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;otherwise throw error&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-export-the-alice-applicatio&#34;&gt;3. Export the &amp;ldquo;alice&amp;rdquo; applicatio&lt;/h3&gt;
&lt;p&gt;export the application to artifiacts/alice.json&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Implement IOU Smart Contract</title>
      <link>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/smart-contract/implement/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/smart-contract/implement/</guid>
      <description>
        
        
        &lt;p&gt;&lt;video width=&#34;480&#34; height=&#34;320&#34; controls=&#34;controls&#34;&gt;
    &lt;source src=&#34;https://tibcosoftware.github.io/dovetail/dovetail/videos/iou_smart_contract_impl.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-issueiou-transaction&#34;&gt;1 IssueIOU Transaction&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Go to Apps Tab &amp;gt; Create to create a new Application &amp;ldquo;IOU&amp;rdquo;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create a flow&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;flow name &amp;ldquo;IssueIOU&amp;rdquo; &amp;gt;&lt;/li&gt;
&lt;li&gt;Add a trigger, select &amp;ldquo;SmartContract Action Trigger&amp;rdquo; from the list
&lt;ul&gt;
&lt;li&gt;Select &amp;ldquo;IOU&amp;rdquo; from the dropdown menu&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;Next&amp;rdquo; and &amp;ldquo;Next&amp;rdquo; to get to &amp;ldquo;Define Transaction Input&amp;rdquo; section, security and time window are not supported for Corda smart contract&lt;/li&gt;
&lt;li&gt;Add input fields
&lt;ul&gt;
&lt;li&gt;linearId, select &amp;ldquo;LinearId&amp;rdquo; from type dropdown menu&lt;/li&gt;
&lt;li&gt;issuer, select &amp;ldquo;Party&amp;rdquo; from type dropdown menu&lt;/li&gt;
&lt;li&gt;holder, select &amp;ldquo;Party&amp;rdquo; from type dropdown menu&lt;/li&gt;
&lt;li&gt;amt, select &amp;ldquo;Amount&lt;Currency&gt;&amp;rdquo; from type dropdown menu&lt;/li&gt;
&lt;li&gt;click &amp;ldquo;Next&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Add output fields, leave this blank, click &amp;ldquo;Continue&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Copy Schema&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Select the trigger
&lt;ul&gt;
&lt;li&gt;Map to flow inputs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Now we will implement the flow
&lt;ul&gt;
&lt;li&gt;Add &amp;ldquo;Ledger Operation&amp;rdquo; activity from Dovetail-Ledger category&lt;/li&gt;
&lt;li&gt;Map input&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-transferiou-transaction&#34;&gt;2 TransferIOU Transaction&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create a new flow to implement TransferIOU transaction
&lt;ul&gt;
&lt;li&gt;Add a trigger, select &amp;ldquo;SmartContract Action Trigger&amp;rdquo; from the list
&lt;ul&gt;
&lt;li&gt;Select &amp;ldquo;IOU&amp;rdquo; from the dropdown menu&lt;/li&gt;
&lt;li&gt;Click &amp;ldquo;Next&amp;rdquo; and &amp;ldquo;Next&amp;rdquo; to get to &amp;ldquo;Define Transaction Input&amp;rdquo; section, security and time window are not supported for Corda smart contract&lt;/li&gt;
&lt;li&gt;Add input fields
&lt;ul&gt;
&lt;li&gt;iou, select &amp;ldquo;AssetRef&amp;rdquo; from Type dropdown menu, enter &amp;ldquo;com.example.iou.IOU&amp;rdquo; in the RecordType field, select &amp;ldquo;True&amp;rdquo; from Consuming dropdown menu&lt;/li&gt;
&lt;li&gt;newHolder, select &amp;ldquo;Party&amp;rdquo; from type dropdown menu&lt;/li&gt;
&lt;li&gt;click &amp;ldquo;Next&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Add output fields, leave this blank, click &amp;ldquo;Continue&amp;rdquo;&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Copy Schema&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Select the trigger
&lt;ul&gt;
&lt;li&gt;Map to flow inputs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Now we will implement the flow
&lt;ul&gt;
&lt;li&gt;Add &amp;ldquo;Ledger Operation&amp;rdquo; activity from Dovetail-Ledger category&lt;/li&gt;
&lt;li&gt;Map input&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-settleiou-transaction&#34;&gt;3 SettleIOU Transaction&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create a new flow to implement SettleIOU transaction
&lt;ul&gt;
&lt;li&gt;Add a trigger, select &amp;ldquo;SmartContract Action Trigger&amp;rdquo; from the list
* Select &amp;ldquo;IOU&amp;rdquo; from the dropdown menu
* Click &amp;ldquo;Next&amp;rdquo; and &amp;ldquo;Next&amp;rdquo; to get to &amp;ldquo;Define Transaction Input&amp;rdquo; section, security and time window are not supported for Corda smart contract
* Add input fields
* iou, select &amp;ldquo;AssetRef&amp;rdquo; from Type dropdown menu, enter &amp;ldquo;com.example.iou.IOU&amp;rdquo; in the RecordType field, select &amp;ldquo;True&amp;rdquo; from Consuming dropdown menu
* funds, select &amp;ldquo;AssetRef&lt;Cash&gt;&amp;rdquo; from Type dropdown menu, select &amp;ldquo;True&amp;rdquo; from Consuming dropdown menu, select &amp;ldquo;True&amp;rdquo; from Repeating dropdown menu
* click &amp;ldquo;Next&amp;rdquo;
* Add output fields, leave this blank, click &amp;ldquo;Continue&amp;rdquo;
* Select &amp;ldquo;Copy Schema&amp;rdquo;
&lt;ul&gt;
&lt;li&gt;Select the trigger
&lt;ul&gt;
&lt;li&gt;Map to flow inputs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Now we will implement the flow
&lt;ul&gt;
&lt;li&gt;Add &amp;ldquo;Payment Processor&amp;rdquo; activity from Dovetail-Ledger category&lt;/li&gt;
&lt;li&gt;Map input&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Run test cases</title>
      <link>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/corda-test/test-cases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/corda-test/test-cases/</guid>
      <description>
        
        
        &lt;h3 id=&#34;1-issue-cash&#34;&gt;1 Issue cash&lt;/h3&gt;
&lt;p&gt;Use bank&#39;s swagger UI to issue and transfer cash to charlie.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;go to security-controller section&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;login method
&lt;ul&gt;
&lt;li&gt;username = user1, password = test&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;execute&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;go to cash-controller section&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/cash/flow/issue-payment method
&lt;ul&gt;
&lt;li&gt;Authorizarion: copy the token value from login output, without the quotes&lt;/li&gt;
&lt;li&gt;Input:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;amount&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;quantity&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100000&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;currency&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;USD&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;issuerRef&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;00&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;recipient&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;O=charlie,L=New York,C=US&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;anonymous&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;notary&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;O=Notary,L=London,C=GB&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;execute, if successful, you should see output similar to following
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;transactionId&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;FC85B7E74E8D9A4BDD39A2D83FA2C41C4CB57A296E43A3B5D9AF08FC7CF06E1B&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-issue-an-iou&#34;&gt;2 Issue an IOU&lt;/h3&gt;
&lt;p&gt;Use charlie&#39;s swagger UI to issue an IOU&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;go to security-controller section&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;login method
&lt;ul&gt;
&lt;li&gt;username = user1, password = test&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;execute&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;go to query-controller section&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/query/states&lt;/li&gt;
&lt;li&gt;Authorizarion: copy the token value from login output, without the quotes&lt;/li&gt;
&lt;li&gt;execute, you should see cash is in the vault&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;go to main-controller section&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/api/issueiouinitiatort method
&lt;ul&gt;
&lt;li&gt;Authorizarion: copy the token value from login output, without the quotes&lt;/li&gt;
&lt;li&gt;Input:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;holder&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;O=alice,L=New York,C=US&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;amt&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;quantity&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10000&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;currency&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;USD&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;extId&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;iou1&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;execute&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;go to query-controller section&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/query/states&lt;/li&gt;
&lt;li&gt;Authorizarion: copy the token value from login output, without the quotes&lt;/li&gt;
&lt;li&gt;execute, you should see com.example.iou.IOU is now in the vault&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-transfer-the-iou&#34;&gt;3 Transfer the IOU&lt;/h3&gt;
&lt;p&gt;Use alice&#39;s swagger to transfer IOU to bob.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;go to security-controller section&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;login method
&lt;ul&gt;
&lt;li&gt;username = user1, password = test&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;execute&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;go to query-controller section&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/query/states&lt;/li&gt;
&lt;li&gt;Authorizarion: copy the token value from login output, without the quotes&lt;/li&gt;
&lt;li&gt;execute, you should see com.example.iou.IOU in the output, copy the linearId.id value&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;go to main-controller section&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/api/transferiouinitiator
&lt;ul&gt;
&lt;li&gt;Authorizarion: copy the token value from login output, without the quotes&lt;/li&gt;
&lt;li&gt;Input&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;iouId&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;externalId&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;iou1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;paste the linearId.id value here&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;newHoder&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;O=bob,L=New York,C=US&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;execute&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;go to query-controller section&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/query/states&lt;/li&gt;
&lt;li&gt;Authorizarion: copy the token value from login output, without the quotes&lt;/li&gt;
&lt;li&gt;execute, com.example.iou.IOU is no longer in the vault&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-settle-the-iou&#34;&gt;4 Settle the IOU&lt;/h3&gt;
&lt;p&gt;Use charlie&#39;s swagger UI to settle the IOU with cash&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;go to main-controller section
&lt;ul&gt;
&lt;li&gt;/api/settleiouinitiator method
&lt;ul&gt;
&lt;li&gt;Authorizarion: copy the token value from login output, without the quotes&lt;/li&gt;
&lt;li&gt;Input:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;iouId&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;externalId&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;iou1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;copy iou linearId.id value here&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;go to query-controller section
&lt;ul&gt;
&lt;li&gt;/query/states&lt;/li&gt;
&lt;li&gt;Authorizarion: copy the token value from login output, without the quotes&lt;/li&gt;
&lt;li&gt;execute, com.example.iou.IOU is no longer in the vault, and cash amount is reduced by $100&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Environment Prerequisites</title>
      <link>https://tibcosoftware.github.io/dovetail/docs/getting-started/environment-prerequisites/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/dovetail/docs/getting-started/environment-prerequisites/</guid>
      <description>
        
        
        &lt;h2 id=&#34;dovetail-studio-requirements&#34;&gt;Dovetail Studio Requirements&lt;/h2&gt;
&lt;h3 id=&#34;docker&#34;&gt;Docker&lt;/h3&gt;
&lt;p&gt;Docker is needed to run Dovetail Studio, you can find the installation details here:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/&#34;&gt;Docker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/compose/install/&#34;&gt;Docker Compose&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hyperledger-fabric-requirements&#34;&gt;Hyperledger Fabric Requirements&lt;/h2&gt;
&lt;h3 id=&#34;hyperledger-fabric-sdk&#34;&gt;Hyperledger Fabric SDK&lt;/h3&gt;
&lt;p&gt;If you are developing for Hyperledger Fabric, below is a link to its installation instructions.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://hyperledger-fabric.readthedocs.io/en/release-1.3/install.html&#34;&gt;Hyperledger Fabric&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;r3-corda-requirements&#34;&gt;R3 Corda Requirements&lt;/h2&gt;
&lt;h3 id=&#34;java-programming-language-and-tools&#34;&gt;Java Programming Language and Tools&lt;/h3&gt;
&lt;p&gt;If you are developing for R3 Corda you will need Java runtime.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IMPORTANT: &lt;a href=&#34;https://www.oracle.com/technetwork/java/javase/downloads/index.html&#34;&gt;Java SE Development Kit 8&lt;/a&gt; is required&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://maven.apache.org/install.html&#34;&gt;Maven&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you are developing for R3 Corda, following jars must be available in your local or public Maven Repository.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;org.jetbrains.kotlin&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;kotlin-stdlib-jre8&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;1.1.60&amp;lt;/version&amp;gt;
    &amp;lt;/dependency&amp;gt;
    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;net.corda&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;corda-core&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;[2.0.0,)&amp;lt;/version&amp;gt;
    &amp;lt;/dependency&amp;gt;
    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;net.corda&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;corda-finance&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;[2.0.0,)&amp;lt;/version&amp;gt;
    &amp;lt;/dependency&amp;gt;
    &amp;lt;dependency&amp;gt;
        &amp;lt;groupId&amp;gt;com.tibco.dovetail&amp;lt;/groupId&amp;gt;
        &amp;lt;artifactId&amp;gt;dovetail-corda&amp;lt;/artifactId&amp;gt;
        &amp;lt;version&amp;gt;[0.2.0, )&amp;lt;/version&amp;gt;
    &amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;Project Dovetail™ library for R3 Corda is available &lt;a href=&#34;https://github.com/TIBCOSoftware/dovetail-contrib/releases/download/v0.2.0/dovetail-corda-0.2.0.jar&#34;&gt;here&lt;/a&gt;, run following command to install it to your local Maven repository&lt;/p&gt;
&lt;/blockquote&gt;
&lt;pre&gt;&lt;code&gt;mkdir dovetail_corda
cd dovetail_corda
curl -OL https://github.com/TIBCOSoftware/dovetail-contrib/releases/download/v0.2.0/dovetail-corda-0.2.0.jar
mvn org.apache.maven.plugins:maven-install-plugin:2.5.2:install-file -DgeneratePom=true -DgroupId=com.tibco.dovetail -DartifactId=dovetail-corda -Dversion=0.2.0 -Dfile=dovetail_corda_v0.2.0.jar -Dpackaging=jar
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Export IOU Smart Contract Application</title>
      <link>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/smart-contract/export/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/smart-contract/export/</guid>
      <description>
        
        
        &lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Go to IOU application&lt;/li&gt;
&lt;li&gt;Click on &amp;ldquo;Export app&amp;rdquo; button, save the file IOU.json to the artifacts folder inside iou_tutorial&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;The exported json file will be used to generate Corda Contract State and Contract, and it is also used to facilitate the implementation of CorDapp flows.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: CorDapp for bob</title>
      <link>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/corda-dist/bob/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/corda-dist/bob/</guid>
      <description>
        
        
        &lt;p&gt;&lt;video width=&#34;480&#34; height=&#34;320&#34; controls=&#34;controls&#34;&gt;
    &lt;source src=&#34;https://tibcosoftware.github.io/dovetail/dovetail/videos/bob.mp4&#34; type=&#34;video/mp4&#34;&gt;
&lt;/video&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-transferiou-receiver-flow&#34;&gt;1. TransferIOU receiver flow&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create a flow
&lt;ul&gt;
&lt;li&gt;Create a flow&lt;/li&gt;
&lt;li&gt;flow name: TransferIOUResponder&lt;/li&gt;
&lt;li&gt;select trigger : Dovetail CorDApp Flow Receiver
&lt;ul&gt;
&lt;li&gt;select receiver from flow type dropdown&lt;/li&gt;
&lt;li&gt;select false for &amp;ldquo;Use confidential identities for this transaction?&amp;rdquo;&lt;/li&gt;
&lt;li&gt;initiator flow name: com.alice.iou.flows.TransferIOUInitiator&lt;/li&gt;
&lt;li&gt;click &amp;ldquo;Continue&amp;rdquo; button&lt;/li&gt;
&lt;li&gt;select &amp;ldquo;Copy Schema&amp;rdquo;&lt;/li&gt;
&lt;li&gt;select the trigger, and map flow input&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-settleiou-receiver-flow&#34;&gt;2. SettleIOU receiver flow&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Create a flow
&lt;ul&gt;
&lt;li&gt;Create a flow&lt;/li&gt;
&lt;li&gt;flow name: SettleIOUResponder&lt;/li&gt;
&lt;li&gt;select trigger : Dovetail CorDApp Flow Receiver
&lt;ul&gt;
&lt;li&gt;select receiver from flow type dropdown&lt;/li&gt;
&lt;li&gt;select false for &amp;ldquo;Use confidential identities for this transaction?&amp;rdquo;&lt;/li&gt;
&lt;li&gt;initiator flow name: com.charlie.iou.flows.SettleIOUInitiator&lt;/li&gt;
&lt;li&gt;click &amp;ldquo;Continue&amp;rdquo; button&lt;/li&gt;
&lt;li&gt;select &amp;ldquo;Copy Schema&amp;rdquo;&lt;/li&gt;
&lt;li&gt;select the trigger, and map flow input&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-export-the-bob-applicatio&#34;&gt;3. Export the &amp;ldquo;bob&amp;rdquo; applicatio&lt;/h3&gt;
&lt;p&gt;export the application to artifiacts/bob.json&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Generate Corda Client</title>
      <link>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/corda-client/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/corda-client/</guid>
      <description>
        
        
        &lt;p&gt;Dovetail CLI generates RPC client from CorDApp flows and Smart contract metadata, the generated client is a standalone springboot web server that exposes REST APIs to allow applications to invoke CorDapp flows.&lt;/p&gt;
&lt;p&gt;The generated client also contains an embedded event streaming service to pulish vault state changes to specified messaging service, at present, only TIBCO Cloud Messaging is supported, use commandline &amp;ndash;streaming eftl to enable streaming service.&lt;/p&gt;
&lt;h3 id=&#34;1-create-dependency-pom-file&#34;&gt;1 Create dependency pom file&lt;/h3&gt;
&lt;p&gt;copy following to artifacts/iou.pom file&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;dependency&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;groupId&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;com.example.iou&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;artifactId&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;IOU&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;version&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;1.0.0&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-generate-corda-client&#34;&gt;2. Generate Corda Client&lt;/h3&gt;
&lt;p&gt;run following command from iou_tutorial folder, a web client is generated for charlie, alice and bob. The last command is to generate a generic web client than will be used for party &amp;lsquo;bank&amp;rsquo; to issue and transfer cash.&lt;/p&gt;
&lt;h3 id=&#34;21-charlie&#34;&gt;2.1. charlie&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;dovetail corda client generate --cordapp-json artifacts/charlie.json --smartcontract-json artifacts/IOU.json -v 1.0.0 -t artifacts/corda --cordapp-ns com.charlie.iou.flows --dependency-file artifacts/iou.pom --streaming none
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;22-alice&#34;&gt;2.2. alice&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;dovetail corda client generate --cordapp-json artifacts/alice.json --smartcontract-json artifacts/IOU.json -v 1.0.0 -t artifacts/corda --cordapp-ns com.alice.iou.flows --dependency-file artifacts/iou.pom --streaming none
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;23-bob&#34;&gt;2.3. bob&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;dovetail corda client generate --cordapp-json artifacts/bob.json --smartcontract-json artifacts/IOU.json -v 1.0.0 -t artifacts/corda --cordapp-ns com.bob.iou.flows --dependency-file artifacts/iou.pom --streaming none
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;24-bank&#34;&gt;2.4. bank&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;dovetail corda client generate -v 1.0.0 -t artifacts/corda
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Generate Corda Artifacts</title>
      <link>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/smart-contract/generate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/smart-contract/generate/</guid>
      <description>
        
        
        &lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Maven should be installed on your system, and mvn is in your PATH&lt;/li&gt;
&lt;li&gt;Dovetail CLI should installed and in your PATH, it is also included in the cli folder in the corda.zip file (for mac only)&lt;/li&gt;
&lt;li&gt;Latest relese of dovetail-corda-x.x.x.jar should be installed to your local maven repo, it is also included in corda.zip, you can run cli/mvninstall.sh to install the jar file&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Run following command from iou_tutorial directory, R3 Corda contract  kotlin-IOUContract-1.0.0.jar is generated and written to artifacts/corda/iou folder, and installed in your local maven repository.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd iou_tutorial
dovetail corda contract generate -m artifacts/IOU.json -v 1.0.0 -t artifacts/corda --namespace com.example.iou
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Generate CorDapp artifacts</title>
      <link>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/corda-dist/cord-app-gen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/dovetail/docs/labs/corda-iou-tut/corda-dist/cord-app-gen/</guid>
      <description>
        
        
        &lt;h3 id=&#34;1-export-cordapp-flows&#34;&gt;1. Export CorDapp flows&lt;/h3&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Export charlie application as charlie.json to artifacts/ folder&lt;/li&gt;
&lt;li&gt;Export alice application as alice.json to artifacts/ folder&lt;/li&gt;
&lt;li&gt;Export bob application as bob.json to artifacts/ folder&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2-generate-cordapp-dependencies&#34;&gt;2. Generate CorDapp dependencies&lt;/h3&gt;
&lt;p&gt;CorDapp responder flows have compile time and runtime dependency on their corresponding initiator flows, however since flows are private to each organization, Tibco Dovetail generates a base initator class without implementation details and can be shared with business partners.&lt;/p&gt;
&lt;p&gt;run following command from iou_tutorial folder&lt;/p&gt;
&lt;h4 id=&#34;21-charlie&#34;&gt;2.1 charlie&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;dovetail corda dapp generate -m artifacts/charlie.json -v 1.0.0 -t artifacts/corda --namespace com.charlie.iou.flows --api
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;22-alice&#34;&gt;2.2 alice&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;dovetail corda dapp generate -m artifacts/alice.json -v 1.0.0 -t artifacts/corda --namespace com.alice.iou.flows --api
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-create-dependency-pom-file-for-each-organization&#34;&gt;3. Create dependency pom file for each organization&lt;/h3&gt;
&lt;h4 id=&#34;31-charlie&#34;&gt;3.1 charlie&lt;/h4&gt;
&lt;p&gt;copy following to artifacts/charlie.pom file&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;dependency&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;groupId&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;com.alice.iou.flows&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;artifactId&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;alice-api&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;version&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;1.0.0&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;32-alice&#34;&gt;3.2 alice&lt;/h4&gt;
&lt;p&gt;copy following to artifacts/alice.pom file&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;dependency&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;groupId&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;com.charlie.iou.flows&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;artifactId&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;charlie-api&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;version&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;1.0.0&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;32-bob&#34;&gt;3.2 bob&lt;/h4&gt;
&lt;p&gt;copy following to artifacts/bob.pom file&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;dependency&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;groupId&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;com.charlie.iou.flows&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;artifactId&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;charlie-api&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;version&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;1.0.0&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;dependency&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;groupId&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;com.alice.iou.flows&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;artifactId&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;alice-api&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;version&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;1.0.0&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;4-generate-cordapps&#34;&gt;4. Generate CorDapps&lt;/h3&gt;
&lt;p&gt;run following command from iou_tutorial folder&lt;/p&gt;
&lt;h3 id=&#34;41-charlie&#34;&gt;4.1 charlie&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;dovetail corda dapp generate -m artifacts/charlie.json -v 1.0.0 -t artifacts/corda --namespace com.charlie.iou.flows --dependency-file artifacts/charlie.pom
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;42-alice&#34;&gt;4.2 alice&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;dovetail corda dapp generate -m artifacts/alice.json -v 1.0.0 -t artifacts/corda --namespace com.alice.iou.flows --dependency-file alice.pom
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;43-bob&#34;&gt;4.3 bob&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;dovetail corda dapp generate -m artifacts/bob.json -v 1.0.0 -t artifacts/corda --namespace com.bob.iou.flows --dependency-file bob.pom
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Fabric Samples and Tutorials</title>
      <link>https://tibcosoftware.github.io/dovetail/docs/labs/fabic-sample/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/dovetail/docs/labs/fabic-sample/</guid>
      <description>
        
        
        &lt;p&gt;You can follow Hyperledger Fabric samples and tutorials in our &lt;a href=&#34;https://github.com/TIBCOSoftware/dovetail-contrib/tree/develop/hyperledger-fabric#getting-started&#34;&gt;Dovetail Contrib&lt;/a&gt; repository.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
